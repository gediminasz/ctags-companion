{
    "name": "ctags-companion",
    "displayName": "Ctags Companion",
    "description": "A Visual Studio Code symbols provider based on Ctags",
    "publisher": "gediminaszlatkus",
    "icon": "logo.png",
    "repository": {
        "type": "git",
        "url": "https://github.com/gediminasz/ctags-companion"
    },
    "version": "2023.1.0",
    "engines": {
        "vscode": "^1.42.0"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onStartupFinished"
    ],
    "main": "./src/extension.js",
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "Ctags Companion",
            "properties": {
                "ctags-companion.command": {
                    "type": "string",
                    "default": "ctags -R --fields=+nKz -f .vscode/.tags",
                    "description": "Command to generate the tags file. This command is used by the `Terminal > Run Task... > Ctags Companion: rebuild tags` task.",
                    "scope": "resource"
                },
                "ctags-companion.path": {
                    "type": "string",
                    "default": ".vscode/.tags",
                    "description": "Location of the ctags file.",
                    "scope": "resource"
                },
                "ctags-companion.documentSelector": {
                    "default": {
                        "scheme": "file"
                    },
                    "description": "Document selector object used when registering symbol providers, read more at https://code.visualstudio.com/api/references/vscode-api#DocumentSelector."
                },
                "ctags-companion.fuzzyMatchingEnabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Should fuzzy matching be used in workspace symbols provider."
                },
                "ctags-companion.readtagsEnabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Should `readtags` command be used for looking up symbol definitions. This option is fast and memory efficient, however it is still experimental."
                },
                "ctags-companion.readtagsGoToDefinitionCommand": {
                    "type": "string",
                    "default": "readtags -en -t .vscode/.tags",
                    "description": "When `readtags` is enabled, this command is used for the \"go to definition\" feature (i.e. F12 or Ctrl+click).",
                    "scope": "resource"
                },
                "ctags-companion.readtagsGoToSymbolInWorkspaceCommand": {
                    "type": "string",
                    "default": "readtags -einp -t .vscode/.tags",
                    "description": "When `readtags` is enabled, this command is used for the \"go to symbol in workspace\" feature (i.e. Ctrl+T).",
                    "scope": "resource"
                },
                "ctags-companion.ctagsGoToSymbolInEditorCommand": {
                    "type": "string",
                    "default": "ctags --fields=+nKz -f -",
                    "description": "When `readtags` is enabled, this command is used for the outline and the \"go to symbol in editor\" feature (i.e. Ctrl+Shift+O).",
                    "scope": "resource"
                }
            }
        },
        "commands": [
            {
                "command": "ctags-companion.reindex",
                "title": "Ctags Companion: reindex"
            }
        ]
    },
    "scripts": {
        "test": "jest"
    },
    "devDependencies": {
        "jest": "^29.3.1"
    },
    "jest": {
        "coverageThreshold": {
            "global": {
                "branches": 69
            }
        }
    }
}
